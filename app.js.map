{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/app.js","js/game.js","js/hand.js","js/init.js","js/scoring.js","js/utils.js","js/view/gameBalance.js","js/view/gamePanel.js","js/view/gamesList.js","js/view/handCreator.js","js/view/newGameForm.js","js/view/templates.js","node_modules/needlepoint/dist/container.js","node_modules/needlepoint/dist/dependencies.js","node_modules/needlepoint/dist/index.js","node_modules/needlepoint/dist/singleton.js"],"names":[],"mappings":"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AhB,CAAxB;AACH;AACJ,aAJD;AAKH;;AAED;;;;;;kCAGU;AACN,mBAAO,KAAK,QAAZ;AACH;;;;;;;AC7EL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nimport {Hand} from './hand.js';\r\nimport {Player, Game} from './game.js';\r\nimport {HandCreatorView} from \"./view/handCreator.js\";\r\nimport {GameBalanceTableView} from \"./view/gameBalance\";\r\n\r\nimport {dependencies} from 'needlepoint';\r\nimport {domLoader} from \"./view/templates\";\r\nimport {GamesListView} from \"./view/gamesList\";\r\nimport {NewGameFormView} from \"./view/newGameForm\";\r\n\r\n\r\n/**\r\n * @typedef {Object} OnEditFinishEvent\r\n * @property {Round} round\r\n * @property {Player} player\r\n * @property {Array<TileSet>} tilesets\r\n * @property {boolean} isWinner\r\n * @property {boolean} lastTileFromWall\r\n * @property {boolean} lastAvailableTile\r\n * @property {boolean} lastTileSpecial\r\n */\r\n\r\n/**\r\n * @typedef {Object} OnHandEditEvent\r\n * @property {Round} round\r\n * @property {Player} player\r\n */\r\n\r\n\r\n@dependencies(domLoader('app'), HandCreatorView, GameBalanceTableView, GamesListView, NewGameFormView)\r\nexport class MainAppUI {\r\n\r\n    /**\r\n     * @param {DomTemplate} template\r\n     * @param {HandCreatorView} handCreator\r\n     * @param {GameBalanceTableView} balanceView\r\n     * @param {GamesListView} gameList\r\n     * @param {NewGameFormView} newGameForm\r\n     */\r\n    constructor(template, handCreator, balanceView, gameList, newGameForm) {\r\n        this.root = template.getRoot();\r\n\r\n        this.handCreator = handCreator;\r\n        this.balanceTable = balanceView;\r\n        this.gameList = gameList;\r\n        this.newGameForm = newGameForm;\r\n\r\n        this.panels = [this.handCreator, this.balanceTable, this.gameList, this.newGameForm];\r\n        /**\r\n         *\r\n         * @type {GamePanel}\r\n         */\r\n        this.activePanel = null;\r\n\r\n        this.panels.forEach(panel => {\r\n            this.root.appendChild(panel.getRoot());\r\n            panel.hide();\r\n        });\r\n\r\n        this.handCreator.initUI();\r\n    }\r\n\r\n    showPanel(panel) {\r\n        if(this.activePanel) {\r\n            this.activePanel.hide();\r\n        }\r\n\r\n        this.activePanel = panel;\r\n\r\n        this.activePanel.show();\r\n    }\r\n\r\n    mount(parent) {\r\n        parent.appendChild(this.root);\r\n    }\r\n}\r\n\r\n@dependencies(MainAppUI)\r\nexport class MahjongLilHelperMainViewController {\r\n\r\n    /**\r\n     * @param {MainAppUI} view\r\n     */\r\n    constructor(view) {\r\n        this.view = view;\r\n\r\n        /**\r\n         * @type {Game}\r\n         */\r\n        this.currentGame = null;\r\n\r\n        /**\r\n         * @type {Array<Game>}\r\n         */\r\n        this.games = [];\r\n\r\n        this.view.gameList.gameSelectedEvent.addListener(game => {\r\n            this.loadGame(game);\r\n        });\r\n\r\n        this.view.gameList.newGameEvent.addListener(() => this.view.showPanel(this.view.newGameForm));\r\n\r\n        this.view.newGameForm.cancelEvent.addListener(() => this.view.showPanel(this.view.gameList));\r\n\r\n        this.view.newGameForm.newGameCreateEvent.addListener(players => this.addNewGame(players));\r\n\r\n        this.view.balanceTable.onHandEditClick.addListener((/*OnHandEditEvent*/event) => {\r\n            this.view.showPanel(this.view.handCreator);\r\n\r\n            this.view.handCreator.showHand(event.round, event.player);\r\n        });\r\n\r\n        this.view.balanceTable.addRoundEvent.addListener(() => {\r\n            this.currentGame.createRound();\r\n            this.view.balanceTable.renderGameBalance(this.currentGame);\r\n        });\r\n\r\n        this.view.handCreator.onEditFinish.addListener(this.handleHandEditFinish.bind(this));\r\n    }\r\n\r\n    loadState(games) {\r\n        this.view.showPanel(this.view.gameList);\r\n\r\n        this.games = games;\r\n        this.view.gameList.loadGames(this.games);\r\n    }\r\n\r\n    loadGame(game) {\r\n        this.view.showPanel(this.view.balanceTable);\r\n        this.currentGame = game;\r\n        this.view.balanceTable.renderGameBalance(this.currentGame);\r\n    }\r\n\r\n    addNewGame(players) {\r\n        this.games.push(new Game(...players));\r\n\r\n        this.view.showPanel(this.view.gameList);\r\n\r\n        this.view.gameList.loadGames(this.games);\r\n    }\r\n\r\n    /**\r\n     * @param {OnEditFinishEvent} event\r\n     */\r\n    handleHandEditFinish(event) {\r\n        this.view.showPanel(this.view.balanceTable);\r\n\r\n        let hand = new Hand();\r\n        event.tilesets.forEach(set => hand.addSet(set));\r\n\r\n        event.round.setHand(event.player, hand);\r\n        if(event.isWinner) {\r\n            event.round.setWinner(event.player, event.lastAvailableTile, event.lastTileFromWall);\r\n        }\r\n\r\n        this.view.balanceTable.renderGameBalance(this.currentGame);\r\n    }\r\n}\r\n","import * as hand from './hand.js';\r\nimport * as score from './scoring.js';\r\n\r\nclass Player {\r\n    constructor(seatNumber, name) {\r\n        this.seatNumber = seatNumber;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nclass Round {\r\n    constructor(players, roundIndex) {\r\n        this.roundNumber = roundIndex + 1;\r\n        this.roundIndex = roundIndex;\r\n\r\n        this.balanceCalculator = new RoundBalanceCalculator();\r\n        this.scoreCalculator = score.ScoreCalculator.createDefaultScoreCalculator();\r\n\r\n        this.windPhase = Math.floor(this.roundIndex/4);\r\n        this.windIndicator = hand.WindOrder[this.windPhase % 4];\r\n\r\n        this.eastWindPlayer = players[this.roundIndex % 4];\r\n\r\n        this.winner = null;\r\n        this.lastAvailableTile = false;\r\n        this.lastTileFromWall = false;\r\n\r\n        this.hands = [\r\n            {player: players[0], hand: null},\r\n            {player: players[1], hand: null},\r\n            {player: players[2], hand: null},\r\n            {player: players[3], hand: null},\r\n        ];\r\n\r\n        this.players = players;\r\n        this.roundScores = [0, 0, 0, 0];\r\n    }\r\n\r\n    setHand(player, hand) {\r\n        this.hands[player.seatNumber].hand = hand;\r\n\r\n        this.roundScores[player.seatNumber] = this.scoreCalculator.calculateScore(this, player);\r\n    }\r\n\r\n    setWinner(player, lastAvailableTile, lastTileFromWall) {\r\n        this.winner = player;\r\n        this.lastAvailableTile = lastAvailableTile || false;\r\n        this.lastTileFromWall = lastTileFromWall || false;\r\n\r\n        this.players.forEach((player, index) => {\r\n            this.roundScores[index] = this.scoreCalculator.calculateScore(this, player);\r\n        });\r\n    }\r\n\r\n    getHand(player) {\r\n        return this.hands[player.seatNumber];\r\n    }\r\n\r\n    getPlayerWind(player) {\r\n        let playerIndex = (this.windPhase + player.seatNumber - (this.roundIndex + this.windPhase) % 4) % 4;\r\n\r\n        if(playerIndex < 0) {\r\n            return hand.WindOrder[hand.WindOrder.length + playerIndex];\r\n        }\r\n\r\n        return hand.WindOrder[playerIndex];\r\n    }\r\n\r\n    getRoundBalance() {\r\n        return this.balanceCalculator.getBalance(this, this.players, this.roundScores);\r\n    }\r\n}\r\n\r\nclass RoundBalanceCalculator {\r\n    getBalance(round, players, scores) {\r\n\r\n        let result = [0, 0, 0, 0];\r\n\r\n        for(let i = 0; i < players.length; i++) {\r\n            for(let j = i+1; j < players.length; j++) {\r\n                let p1 = players[i];\r\n                let p2 = players[j];\r\n\r\n                let srcIdx = p1.seatNumber;\r\n                let otherIdx = p2.seatNumber;\r\n\r\n                let score = 0;\r\n                let mult = 1;\r\n\r\n                let dealsWithEastWind = (p1 === round.eastWindPlayer || p2 === round.eastWindPlayer);\r\n                let dealsWithWinner = (p1 === round.winner || p2 === round.winner);\r\n\r\n                if(dealsWithEastWind) {\r\n                    mult = 2;\r\n                }\r\n\r\n                let gainer, loser;\r\n\r\n                if(dealsWithWinner) {\r\n                    gainer = (p1 === round.winner) ? p1 : p2;\r\n                    loser = (p1 !== round.winner) ? p1 : p2;\r\n\r\n                    score = scores[gainer.seatNumber];\r\n                }\r\n                else {\r\n                    gainer = (scores[srcIdx] >= scores[otherIdx]) ? p1 : p2;\r\n                    loser = (scores[srcIdx] < scores[otherIdx]) ? p1 : p2;\r\n\r\n                    score = scores[gainer.seatNumber] - scores[loser.seatNumber];\r\n                }\r\n\r\n                result[gainer.seatNumber] += score * mult;\r\n                result[loser.seatNumber] -= score * mult;\r\n\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass Game {\r\n    constructor(p1, p2, p3, p4) {\r\n        /**\r\n         * @type {Array<Player>}\r\n         */\r\n        this.players = [p1, p2, p3, p4];\r\n\r\n        this.rounds = [];\r\n    }\r\n\r\n    /**\r\n     * @return {Round}\r\n     */\r\n    createRound() {\r\n        let round = new Round(this.players, this.rounds.length);\r\n\r\n        this.rounds.push(round);\r\n\r\n        return round;\r\n    }\r\n\r\n    getTotalBalance(maxRoundNumber) {\r\n        let result = [0, 0, 0, 0];\r\n\r\n        maxRoundNumber = (maxRoundNumber === undefined) ? this.rounds.length : maxRoundNumber;\r\n\r\n        this.rounds.slice(0, maxRoundNumber+1).forEach(round => {\r\n            let roundBalance = round.getRoundBalance();\r\n\r\n            result[0] += roundBalance[0];\r\n            result[1] += roundBalance[1];\r\n            result[2] += roundBalance[2];\r\n            result[3] += roundBalance[3];\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n// module.exports = {Game, Round, Player, RoundBalanceCalculator};\r\nexport {Game, Round, Player, RoundBalanceCalculator};","\r\n\r\nconst Suits = {\r\n    BAMBOO: 'bamboo',\r\n    CIRCLE: 'circle',\r\n    CHARACTER: 'character',\r\n    DRAGON: 'dragon',\r\n    WIND: 'wind',\r\n    BONUS: 'bonus',\r\n};\r\n\r\nconst Dragons = {\r\n    RED: 'red',\r\n    GREEN: 'green',\r\n    WHITE: 'white',\r\n};\r\n\r\nconst Winds = {\r\n    EAST: 'east',\r\n    WEST: 'west',\r\n    NORTH: 'north',\r\n    SOUTH: 'south',\r\n};\r\n\r\nconst Bonus = {\r\n    FLOWER1: 'flower1',\r\n    FLOWER2: 'flower2',\r\n    FLOWER3: 'flower3',\r\n    FLOWER4: 'flower4',\r\n    SUMMER: 'summer',\r\n    SPRING: 'spring',\r\n    AUTUMN: 'autumn',\r\n    WINTER: 'winter',\r\n};\r\n\r\n\r\nclass Tile {\r\n    constructor(isSuit, isHonour) {\r\n        this.isSuit = isSuit;\r\n        this.isHonour = isHonour;\r\n    }\r\n\r\n    equals(other) {\r\n        if(this.isSuit !== other.isSuit) {\r\n            return false;\r\n        }\r\n\r\n        return this.isHonour === other.isHonour;\r\n    }\r\n}\r\n\r\nclass SuitTile extends Tile {\r\n    constructor(suit, number) {\r\n        super(true, number < 2 || number > 8);\r\n\r\n        this.suit = suit;\r\n        this.number = number;\r\n    }\r\n\r\n    toString() {\r\n        return `[SuitTile ${this.suit}${this.number}]`\r\n    }\r\n\r\n    toTypeString() {\r\n        return `suit-${this.suit}-${this.number}`;\r\n    }\r\n\r\n    equals(other) {\r\n        if(!super.equals(other)) {\r\n            return false;\r\n        }\r\n\r\n        if(this.suit !== other.suit) {\r\n            return false;\r\n        }\r\n\r\n        return this.number === other.number;\r\n    }\r\n}\r\n\r\nclass DragonTile extends Tile {\r\n    constructor(kind) {\r\n        super(false, true);\r\n\r\n        this.dragonKind = kind;\r\n    }\r\n\r\n    toString() {\r\n        return `[DragonTile ${this.dragonKind}]`\r\n    }\r\n\r\n    toTypeString() {\r\n        return `dragon-${this.dragonKind}`;\r\n    }\r\n\r\n    equals(other) {\r\n        if(!super.equals(other)) {\r\n            return false;\r\n        }\r\n\r\n        return this.dragonKind === other.dragonKind;\r\n    }\r\n}\r\n\r\nclass WindTile extends Tile {\r\n    constructor(kind) {\r\n        super(false, true);\r\n\r\n        this.windKind = kind;\r\n    }\r\n\r\n    toString() {\r\n        return `[WindTile ${this.windKind}]`\r\n    }\r\n\r\n    toTypeString() {\r\n        return `wind-${this.windKind}`;\r\n    }\r\n\r\n    equals(other) {\r\n        if(!super.equals(other)) {\r\n            return false;\r\n        }\r\n\r\n        return this.windKind === other.windKind;\r\n    }\r\n}\r\n\r\nclass BonusTile extends Tile {\r\n    constructor(kind) {\r\n        super(false, false);\r\n\r\n        this.bonusKind = kind;\r\n    }\r\n\r\n    toTypeString() {\r\n        return `bonus-${this.bonusKind}`;\r\n    }\r\n\r\n    equals(other) {\r\n        if(!super.equals(other)) {\r\n            return false;\r\n        }\r\n\r\n        return this.bonusKind === other.bonusKind;\r\n    }\r\n}\r\n\r\nconst Tiles = {\r\n    Circle1: new SuitTile(Suits.CIRCLE, 1),\r\n    Circle2: new SuitTile(Suits.CIRCLE, 2),\r\n    Circle3: new SuitTile(Suits.CIRCLE, 3),\r\n    Circle4: new SuitTile(Suits.CIRCLE, 4),\r\n    Circle5: new SuitTile(Suits.CIRCLE, 5),\r\n    Circle6: new SuitTile(Suits.CIRCLE, 6),\r\n    Circle7: new SuitTile(Suits.CIRCLE, 7),\r\n    Circle8: new SuitTile(Suits.CIRCLE, 8),\r\n    Circle9: new SuitTile(Suits.CIRCLE, 9),\r\n\r\n    Bamboo1: new SuitTile(Suits.BAMBOO, 1),\r\n    Bamboo2: new SuitTile(Suits.BAMBOO, 2),\r\n    Bamboo3: new SuitTile(Suits.BAMBOO, 3),\r\n    Bamboo4: new SuitTile(Suits.BAMBOO, 4),\r\n    Bamboo5: new SuitTile(Suits.BAMBOO, 5),\r\n    Bamboo6: new SuitTile(Suits.BAMBOO, 6),\r\n    Bamboo7: new SuitTile(Suits.BAMBOO, 7),\r\n    Bamboo8: new SuitTile(Suits.BAMBOO, 8),\r\n    Bamboo9: new SuitTile(Suits.BAMBOO, 9),\r\n\r\n    Character1: new SuitTile(Suits.CHARACTER, 1),\r\n    Character2: new SuitTile(Suits.CHARACTER, 2),\r\n    Character3: new SuitTile(Suits.CHARACTER, 3),\r\n    Character4: new SuitTile(Suits.CHARACTER, 4),\r\n    Character5: new SuitTile(Suits.CHARACTER, 5),\r\n    Character6: new SuitTile(Suits.CHARACTER, 6),\r\n    Character7: new SuitTile(Suits.CHARACTER, 7),\r\n    Character8: new SuitTile(Suits.CHARACTER, 8),\r\n    Character9: new SuitTile(Suits.CHARACTER, 9),\r\n\r\n    DragonRed: new DragonTile(Dragons.RED),\r\n    DragonWhite: new DragonTile(Dragons.WHITE),\r\n    DragonGreen: new DragonTile(Dragons.GREEN),\r\n\r\n    WindEast: new WindTile(Winds.EAST),\r\n    WindWest: new WindTile(Winds.WEST),\r\n    WindNorth: new WindTile(Winds.NORTH),\r\n    WindSouth: new WindTile(Winds.SOUTH),\r\n\r\n    BonusFlower1: new BonusTile(Bonus.FLOWER1),\r\n    BonusFlower2: new BonusTile(Bonus.FLOWER2),\r\n    BonusFlower3: new BonusTile(Bonus.FLOWER3),\r\n    BonusFlower4: new BonusTile(Bonus.FLOWER4),\r\n    BonusSummer: new BonusTile(Bonus.SUMMER),\r\n    BonusSpring: new BonusTile(Bonus.SPRING),\r\n    BonusAutumn: new BonusTile(Bonus.AUTUMN),\r\n    BonusWinter: new BonusTile(Bonus.WINTER),\r\n};\r\n\r\nconst TileGroups = {\r\n    [Suits.BAMBOO]: [Tiles.Bamboo1, Tiles.Bamboo2, Tiles.Bamboo3, Tiles.Bamboo4, Tiles.Bamboo5, Tiles.Bamboo6, Tiles.Bamboo7, Tiles.Bamboo8, Tiles.Bamboo9],\r\n    [Suits.CIRCLE]: [Tiles.Circle1, Tiles.Circle2, Tiles.Circle3, Tiles.Circle4, Tiles.Circle5, Tiles.Circle6, Tiles.Circle7, Tiles.Circle8, Tiles.Circle9],\r\n    [Suits.CHARACTER]: [Tiles.Character1, Tiles.Character2, Tiles.Character3, Tiles.Character4, Tiles.Character5, Tiles.Character6, Tiles.Character7, Tiles.Character8, Tiles.Character9],\r\n    [Suits.DRAGON]: [Tiles.DragonRed, Tiles.DragonGreen, Tiles.DragonWhite],\r\n    [Suits.WIND]: [Tiles.WindWest, Tiles.WindEast, Tiles.WindNorth, Tiles.WindSouth],\r\n    [Suits.BONUS]: [Tiles.BonusFlower1, Tiles.BonusFlower2, Tiles.BonusFlower3, Tiles.BonusFlower4,\r\n        Tiles.BonusSummer, Tiles.BonusSpring, Tiles.BonusAutumn, Tiles.BonusWinter],\r\n};\r\n\r\nconst WindOrder = [\r\n    Tiles.WindEast,\r\n    Tiles.WindSouth,\r\n    Tiles.WindWest,\r\n    Tiles.WindNorth,\r\n];\r\n\r\nclass TileSet {\r\n    constructor(revealed, tiles) {\r\n        this.isRevealed = revealed;\r\n        this.tiles = tiles;\r\n\r\n        this.simpleSet = (tiles[0] instanceof SuitTile) && !tiles[0].isHonour;\r\n    }\r\n\r\n    getTile() {\r\n        return this.tiles[0];\r\n    }\r\n}\r\n\r\nclass Chow extends TileSet {\r\n    constructor(revealed, tile1, tile2, tile3) {\r\n        super(revealed, [tile1, tile2, tile3]);\r\n    }\r\n}\r\n\r\nclass Pung extends TileSet {\r\n    constructor(revealed, tile) {\r\n        super(revealed, [tile, tile, tile]);\r\n    }\r\n}\r\n\r\nclass Kong extends TileSet {\r\n    constructor(revealed, tile) {\r\n        super(revealed, [tile, tile, tile, tile]);\r\n    }\r\n}\r\n\r\nclass Pair extends TileSet {\r\n    constructor(tile) {\r\n        super(false, [tile, tile]);\r\n    }\r\n}\r\n\r\nclass FreeTiles extends TileSet {\r\n    constructor(tiles) {\r\n        super(false, tiles);\r\n    }\r\n}\r\n\r\n\r\nclass Hand {\r\n    constructor() {\r\n        this.tiles = [];\r\n        this.sets = [];\r\n    }\r\n\r\n    addTile(tile) {\r\n        this.tiles.push(tile);\r\n    }\r\n\r\n    getTileCount(tile) {\r\n        return this.tiles.filter((t) => t.equals(tile)).length;\r\n    }\r\n\r\n    addSet(tileSet) {\r\n        this.sets.push(tileSet);\r\n        this.tiles = this.tiles.concat(tileSet.tiles);\r\n    }\r\n\r\n    /**\r\n     * @return {Array<TileSet>}\r\n     */\r\n    getSetsOfType(clazz, tileType) {\r\n        let result = this.sets.filter((tileSet) => tileSet instanceof clazz);\r\n\r\n        if(tileType) {\r\n            result = result.filter((tileSet) => tileSet.getTile() instanceof tileType)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getTilesOfType(tileType) {\r\n        return this.tiles.filter(tile => tile instanceof tileType);\r\n    }\r\n}\r\n\r\n// module.exports = {\r\n//     Hand, Tiles, SuitTile, Suits, Dragons, DragonTile, Winds, WindTile, Bonus, BonusTile,\r\n//     Chow, Kong, Pung, Pair, WindOrder\r\n// };\r\n\r\nexport {\r\n    Hand, Tiles, SuitTile, Suits, Dragons, DragonTile, Winds, WindTile, Bonus, BonusTile,\r\n    Chow, Kong, Pung, Pair, FreeTiles, WindOrder, TileGroups\r\n};","import {TemplateContainer} from \"./view/templates\";\r\nimport {Game, Player} from \"./game\";\r\nimport {MahjongLilHelperMainViewController} from \"./app\";\r\n\r\nimport {container} from 'needlepoint';\r\n\r\nfunction game1() {\r\n    let players = [\r\n        new Player(0, \"Grzesiek\"),\r\n        new Player(1, \"Wojtek\"),\r\n        new Player(2, \"Gosia\"),\r\n        new Player(3, \"Ola\"),\r\n    ];\r\n    let game = new Game(players[0], players[1], players[2], players[3]);\r\n\r\n    let round1 = game.createRound();\r\n    let round2 = game.createRound();\r\n    let round3 = game.createRound();\r\n\r\n    return game;\r\n}\r\n\r\nfunction game2() {\r\n    let players = [\r\n        new Player(0, \"Grzesiek\"),\r\n        new Player(1, \"Ratusz\"),\r\n        new Player(2, \"Kasia\"),\r\n        new Player(3, \"Ola\"),\r\n    ];\r\n    let game = new Game(players[0], players[1], players[2], players[3]);\r\n\r\n    let round1 = game.createRound();\r\n    // round1.roundScores = [100, 200, 300, 400];\r\n\r\n    // let round2 = game.createRound();\r\n    // // round2.roundScores = [200, 100, 50, 10];\r\n    //\r\n    // let round3 = game.createRound();\r\n\r\n    return game;\r\n}\r\n\r\nfunction game3() {\r\n    let players = [\r\n        new Player(0, \"P1\"),\r\n        new Player(1, \"P2\"),\r\n        new Player(2, \"P3\"),\r\n        new Player(3, \"P4\"),\r\n    ];\r\n    let game = new Game(players[0], players[1], players[2], players[3]);\r\n\r\n    // let round1 = game.createRound();\r\n\r\n    return game;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\r\n\r\n    let games = [\r\n        game1(),\r\n        game2(),\r\n        game3()\r\n    ];\r\n\r\n    let tmpl = container.resolve(TemplateContainer);\r\n    tmpl.discover(document.body);\r\n\r\n    let ctrl = container.resolve(MahjongLilHelperMainViewController);\r\n\r\n    ctrl.view.mount(document.getElementById('mahjongContent'));\r\n\r\n    ctrl.loadState(games);\r\n\r\n    console.log('READY', ctrl);\r\n});","\r\nimport * as h from './hand.js';\r\n\r\n\r\nfunction calcPungKongValue(baseValue, tileSet) {\r\n    if(!tileSet.simpleSet) {\r\n        baseValue *= 2;\r\n    }\r\n\r\n    if(!tileSet.isRevealed) {\r\n        baseValue *= 2;\r\n    }\r\n\r\n    return baseValue;\r\n}\r\n\r\nfunction applyMultipliers(numMultipliers, value) {\r\n    for(let i = 0; i < numMultipliers; i++) {\r\n        value *= 2;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nclass ScoreCalculator {\r\n    constructor(pointsRules, multipliersForAll, multipliersForWinner) {\r\n        this.pointsRules = pointsRules;\r\n        this.multiplierRulesForAll = multipliersForAll;\r\n        this.multiplierRulesForWinner = multipliersForWinner;\r\n    }\r\n\r\n    calculateScore(round, player) {\r\n        let hand = round.getHand(player).hand;\r\n\r\n        if(hand === null) {\r\n            return 0;\r\n        }\r\n\r\n        let appliedPoints = [];\r\n        let appliedMultipliers = [];\r\n\r\n        let points = this.pointsRules.reduce((value, rule) => {\r\n            let p = rule.getPoints(hand, round, player);\r\n            if(p) {\r\n                appliedPoints.push({rule: rule, amount: p});\r\n            }\r\n            return value + (p || 0)\r\n        }, 0);\r\n\r\n        let multipliers = this.multiplierRulesForAll.reduce((value, rule) => {\r\n            let mult = rule.getMultipliers(hand, round, player);\r\n\r\n            if(mult) {\r\n                appliedMultipliers.push({rule: rule, amount: mult});\r\n            }\r\n\r\n            return value + (mult || 0)\r\n        }, 0);\r\n\r\n        if(round.winner === player) {\r\n            multipliers = this.multiplierRulesForWinner.reduce((value, rule) => {\r\n                let mult = rule.getMultipliers(hand, round, player);\r\n\r\n                if(mult) {\r\n                    appliedMultipliers.push({rule: rule, multiplier: mult});\r\n                }\r\n\r\n                return value + (mult || 0)\r\n            }, multipliers);\r\n        }\r\n\r\n        return applyMultipliers(multipliers, points);\r\n    }\r\n\r\n    static createDefaultScoreCalculator() {\r\n        let pointsRules = [\r\n            new BonusTilePoints(),\r\n            new PointsForPairOfRoundWindRule(),\r\n            new PointsForPairOfOwnWindRule(),\r\n            new PointsForPairOfDragonsRule(),\r\n            new PointsForPungRule(),\r\n            new PointsForKongRule(),\r\n            new PointsForMahjong(),\r\n            new PointsForLastAvailableTile(),\r\n            new PointsForLastTileFromWall(),\r\n        ];\r\n        let multiplierRulesForAll = [\r\n            new DragonSetMultiplier(),\r\n            new RoundWindSetMultiplier(),\r\n            new OwnWindSetMultiplier(),\r\n            new ThreeConcealedPungsMultiplier(),\r\n            new ThreeLittleSagesMultiplier(),\r\n            new ThreeGrandSagesMultiplier(),\r\n            new FourLittleBlessingsMultiplier(),\r\n            new FourGrandBlessingsMultiplier(),\r\n        ];\r\n        let multiplierRulesForWinner = [\r\n            new PureChowsMultiplier(),\r\n            new NoChowsMultiplier(),\r\n            new HalfColorMultiplier(),\r\n        ];\r\n\r\n        return new ScoreCalculator(pointsRules, multiplierRulesForAll, multiplierRulesForWinner);\r\n    }\r\n}\r\n\r\n//#region Rules for points\r\n\r\nclass PointsRule {\r\n    getPoints(hand, round, player) {}\r\n}\r\n\r\nclass PointsForTilesetRule extends PointsRule {\r\n\r\n    getPoints(hand, round, player) {\r\n        return hand.sets.reduce((value, tileSet) => value + (this.getTilesetValue(tileSet, round, player) || 0), 0);\r\n    }\r\n\r\n    getTilesetValue(tileSet, round, player) {return 0}\r\n}\r\n\r\nclass PointsForTileRule extends PointsRule {\r\n\r\n    getPoints(hand, round, player) {\r\n        return hand.tiles.reduce((value, tile) => value + (this.getTileValue(tile) || 0), 0);\r\n    }\r\n\r\n    getTileValue(tile) {return 0}\r\n}\r\n\r\nclass BonusTilePoints extends PointsForTileRule {\r\n    getTileValue(tile) {\r\n        if(tile instanceof h.BonusTile) {\r\n            return 4;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForPairOfDragonsRule extends PointsForTilesetRule {\r\n\r\n    getTilesetValue(tileSet, round, player) {\r\n        if(!(tileSet instanceof h.Pair)) {\r\n            return\r\n        }\r\n\r\n        if(tileSet.getTile() instanceof h.DragonTile) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForPairOfRoundWindRule extends PointsForTilesetRule {\r\n\r\n    getTilesetValue(tileSet, round) {\r\n        if(!(tileSet instanceof h.Pair)) {\r\n            return\r\n        }\r\n\r\n        if(round.windIndicator.equals(tileSet.getTile())) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForPairOfOwnWindRule extends PointsForTilesetRule {\r\n\r\n    getTilesetValue(tileSet, round, player) {\r\n        if(!(tileSet instanceof h.Pair)) {\r\n            return\r\n        }\r\n\r\n        if(round.getPlayerWind(player).equals(tileSet.getTile())) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForPungRule extends PointsForTilesetRule {\r\n\r\n    getTilesetValue(tileSet, round, player) {\r\n        if(tileSet instanceof h.Pung) {\r\n            return calcPungKongValue(2, tileSet);\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForKongRule extends PointsForTilesetRule {\r\n\r\n    getTilesetValue(tileSet, round, player) {\r\n        if(tileSet instanceof h.Kong) {\r\n            return calcPungKongValue(8, tileSet);\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForMahjong extends PointsRule {\r\n\r\n    getPoints(hand, round, player) {\r\n        if(round.winner === player) {\r\n            return 20;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForLastAvailableTile extends PointsRule {\r\n\r\n    getPoints(hand, round, player) {\r\n        if(round.winner === player && round.lastAvailableTile) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass PointsForLastTileFromWall extends PointsRule {\r\n\r\n    getPoints(hand, round, player) {\r\n        if(round.winner === player && round.lastTileFromWall) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Rules for multipliers\r\n\r\nclass MultiplierRule {\r\n    getMultipliers(hand, round, player) {}\r\n}\r\n\r\nclass DragonSetMultiplier extends MultiplierRule {\r\n    getMultipliers(hand) {\r\n\r\n        return hand.getSetsOfType(h.Kong, h.DragonTile).concat(hand.getSetsOfType(h.Pung, h.DragonTile)).length;\r\n    }\r\n}\r\n\r\nclass RoundWindSetMultiplier extends MultiplierRule {\r\n    getMultipliers(hand, round) {\r\n        let windSets = hand.getSetsOfType(h.Kong, h.WindTile).concat(hand.getSetsOfType(h.Pung, h.WindTile));\r\n\r\n        return windSets.filter(tileSet => tileSet.getTile().equals(round.windIndicator)).length;\r\n    }\r\n}\r\n\r\nclass OwnWindSetMultiplier extends MultiplierRule {\r\n    getMultipliers(hand, round, player) {\r\n        let windSets = hand.getSetsOfType(h.Kong, h.WindTile).concat(hand.getSetsOfType(h.Pung, h.WindTile));\r\n\r\n        return windSets.filter(tileSet => tileSet.getTile().equals(round.getPlayerWind(player))).length;\r\n    }\r\n}\r\n\r\nclass ThreeConcealedPungsMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let pungs = hand.getSetsOfType(h.Pung).filter(tileSet => !tileSet.isRevealed);\r\n\r\n        if(pungs.length >= 3) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nclass ThreeLittleSagesMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let dragonSets = hand.getSetsOfType(h.Kong, h.DragonTile).concat(hand.getSetsOfType(h.Pung, h.DragonTile));\r\n        let dragonPairs = hand.getSetsOfType(h.Pair, h.DragonTile);\r\n\r\n        if(dragonSets.length >= 2 && dragonPairs.length >= 1) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nclass ThreeGrandSagesMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let dragonSets = hand.getSetsOfType(h.Kong, h.DragonTile).concat(hand.getSetsOfType(h.Pung, h.DragonTile));\r\n\r\n        if(dragonSets.length >= 3) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass FourLittleBlessingsMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let windSets = hand.getSetsOfType(h.Kong, h.WindTile).concat(hand.getSetsOfType(h.Pung, h.WindTile));\r\n        let windPairs = hand.getSetsOfType(h.Pair);\r\n\r\n        if(windSets.length >= 3 && windPairs.length >= 1) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nclass FourGrandBlessingsMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let windSets = hand.getSetsOfType(h.Kong, h.WindTile).concat(hand.getSetsOfType(h.Pung, h.WindTile));\r\n\r\n        if(windSets.length >= 4) {\r\n            return 2;\r\n        }\r\n    }\r\n}\r\n\r\nclass PureChowsMultiplier extends MultiplierRule {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.pointRules = [\r\n            new PointsForPairOfDragonsRule(),\r\n            new PointsForPairOfOwnWindRule(),\r\n            new PointsForPairOfRoundWindRule(),\r\n            new BonusTilePoints(),\r\n        ]\r\n    }\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let kongsAndPungs = hand.getSetsOfType(h.Kong).concat(hand.getSetsOfType(h.Pung));\r\n\r\n        let points = this.pointRules.reduce((value, rule)=> value + (rule.getPoints(hand, round, player) || 0), 0);\r\n\r\n        if(kongsAndPungs.length === 0 && points === 0) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nclass NoChowsMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let chows = hand.getSetsOfType(h.Chow).length;\r\n        let pungs = hand.getSetsOfType(h.Pung).length;\r\n        let kongs = hand.getSetsOfType(h.Kong).length;\r\n\r\n        if(chows === 0 && (pungs + kongs) > 0) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nclass HalfColorMultiplier extends MultiplierRule {\r\n\r\n    getMultipliers(hand, round, player) {\r\n        let charTiles = hand.getTilesOfType(h.SuitTile).filter(tile => tile.suit === h.Suits.CHARACTER);\r\n        let bambooTiles = hand.getTilesOfType(h.SuitTile).filter(tile => tile.suit === h.Suits.BAMBOO);\r\n        let circleTiles = hand.getTilesOfType(h.SuitTile).filter(tile => tile.suit === h.Suits.CIRCLE);\r\n\r\n        let hasCharTiles = charTiles.length > 0;\r\n        let hasBambooTiles = bambooTiles.length > 0;\r\n        let hasCircleTiles = circleTiles.length > 0;\r\n\r\n        if(hasCharTiles + hasBambooTiles + hasCircleTiles === 1) {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\n//#endregion\r\n\r\n// module.exports = {ScoreCalculator};\r\nexport {ScoreCalculator};","\r\n\r\nclass EventEmitter {\r\n    constructor() {\r\n        this._listeners = [];\r\n    }\r\n\r\n    addListener(callback) {\r\n        this._listeners.push(callback);\r\n    }\r\n\r\n    emit(...args) {\r\n        this._listeners.forEach((callback) => {\r\n            callback(...args);\r\n        })\r\n    }\r\n}\r\n\r\nexport {EventEmitter}","import {EventEmitter} from \"../utils\";\r\nimport {domLoader} from \"./templates\";\r\nimport {dependencies} from \"needlepoint\";\r\nimport {GamePanel} from \"./gamePanel\";\r\n\r\n\r\n@dependencies(domLoader('gameBalance'))\r\nexport class GameBalanceTableView extends GamePanel{\r\n\r\n    /**\r\n     * @param {DomTemplate} template\r\n     */\r\n    constructor(template) {\r\n        super(template.getRoot());\r\n\r\n        this.template = template;\r\n        this.table = template.getRoot();\r\n        this.tbody = this.table.querySelector('tbody');\r\n\r\n        this.onHandEditClick = new EventEmitter();\r\n        this.addRoundEvent = new EventEmitter();\r\n\r\n        this._createdRows = [];\r\n\r\n        this.root.querySelector('[data-action=\"addRound\"]').addEventListener('click', () => {\r\n            this.addRoundEvent.emit();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param {Game} game\r\n     */\r\n    renderGameBalance(game) {\r\n        this.template.fillSlots({\r\n            player1Name: game.players[0].name,\r\n            player2Name: game.players[1].name,\r\n            player3Name: game.players[2].name,\r\n            player4Name: game.players[3].name,\r\n        });\r\n\r\n        this._createdRows.forEach(row => row.parentNode.removeChild(row));\r\n        this._createdRows = [];\r\n\r\n        game.rounds.forEach(round => {\r\n            let balance = round.getRoundBalance();\r\n            let cumulativeBalance = game.getTotalBalance(round.roundIndex);\r\n\r\n            let row = this.table.insertRow();\r\n            this.tbody.appendChild(row);\r\n            this._createdRows.push(row);\r\n\r\n            row.insertCell().appendChild(document.createTextNode(round.roundNumber));\r\n\r\n            let roundCells = this._renderBalance(row, balance);\r\n            this._renderBalance(row, cumulativeBalance);\r\n\r\n            roundCells.forEach((cell, index) => {\r\n                cell.addEventListener('click', () => {\r\n                    this.onHandEditClick.emit({\r\n                        round: round,\r\n                        player: game.players[index],\r\n                    });\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    _renderBalance(row, balance) {\r\n        return balance.map(bal => {\r\n            let cell = row.insertCell();\r\n            cell.appendChild(document.createTextNode(bal));\r\n            return cell;\r\n        });\r\n    }\r\n}","\r\n\r\nexport class GamePanel {\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.root.classList.add('gamePanel');\r\n    }\r\n\r\n    getRoot() {\r\n        return this.root;\r\n    }\r\n\r\n    show() {\r\n        this.root.classList.remove('hidden');\r\n    }\r\n\r\n    hide() {\r\n        this.root.classList.add('hidden');\r\n    }\r\n}","import {EventEmitter} from \"../utils\";\r\nimport {domLoader} from \"./templates\";\r\nimport {dependencies} from \"needlepoint\";\r\nimport {GamePanel} from \"./gamePanel\";\r\n\r\n\r\n@dependencies(domLoader('gamesList'))\r\nexport class GamesListView extends GamePanel{\r\n\r\n    /**\r\n     * @param {DomTemplate} template\r\n     */\r\n    constructor(template) {\r\n        super(template.getRoot());\r\n\r\n        this.gameSelectedEvent = new EventEmitter();\r\n        this.newGameEvent = new EventEmitter();\r\n\r\n        this.gamesList = this.root.querySelector('ul');\r\n\r\n        this.root.querySelector('button').addEventListener('click', () => {\r\n            this.newGameEvent.emit();\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Array<Game>} gamesList\r\n     */\r\n    loadGames(gamesList) {\r\n        while(this.gamesList.firstChild) {\r\n            this.gamesList.removeChild(this.gamesList.firstChild);\r\n        }\r\n\r\n        gamesList.forEach(game => {\r\n            let row = document.createElement('li');\r\n            row.textContent = this._getGameLabel(game);\r\n\r\n            row.addEventListener('click', () => {\r\n                this.gameSelectedEvent.emit(game);\r\n            });\r\n\r\n            this.gamesList.appendChild(row);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param {Game} game\r\n     */\r\n    _getGameLabel(game) {\r\n        return `Runda ${game.rounds.length}: `+\r\n            `${game.players[0].name}, ${game.players[1].name}, ${game.players[2].name}, ${game.players[3].name}`;\r\n    }\r\n}","import {Suits, Pung, Kong, Chow, Pair, TileGroups, FreeTiles} from \"../hand.js\";\r\nimport {EventEmitter} from \"../utils.js\";\r\nimport {domLoader} from \"./templates.js\";\r\n\r\nimport {dependencies} from 'needlepoint';\r\nimport {GamePanel} from \"./gamePanel\";\r\n\r\n@dependencies(domLoader('hand'))\r\nclass HandCreatorView extends GamePanel{\r\n\r\n    /**\r\n     * @param {DomTemplate} template\r\n     */\r\n    constructor(template) {\r\n        super(template.getRoot());\r\n\r\n        this.onEditFinish = new EventEmitter();\r\n\r\n        this.allTiles = [];\r\n        this.addedSets = [];\r\n\r\n        this.suitGroups = this.root.querySelector('.suitGroups');\r\n        this.handContents = this.root.querySelector('.handContent');\r\n\r\n        this.handRevealedInput = this.root.elements['revealed'];\r\n        this.isWinnerInput = this.root.elements['isWinner'];\r\n        this.lastTileFromWallInput = this.root.elements['lastTileFromWall'];\r\n        this.lastAvailableTileInput = this.root.elements['lastAvailableTile'];\r\n        this.lastTileSpecialInput = this.root.elements['lastTileSpecial'];\r\n\r\n        this.playerNameSlot = this.root.querySelector('[data-slot=\"playerName\"]');\r\n        this.roundNumberSlot = this.root.querySelector('[data-slot=\"roundNumber\"]');\r\n\r\n        this.btnFinishHand = this.root.querySelector('[data-action=\"finishHand\"]');\r\n\r\n        this.btnAddPair = this.root.querySelector('[data-action=\"addPair\"]');\r\n        this.btnAddChow = this.root.querySelector('[data-action=\"addChow\"]');\r\n        this.btnAddPung = this.root.querySelector('[data-action=\"addPung\"]');\r\n        this.btnAddKong = this.root.querySelector('[data-action=\"addKong\"]');\r\n        this.btnAddTiles = this.root.querySelector('[data-action=\"addTiles\"]');\r\n\r\n        this.root.addEventListener('submit', e => e.preventDefault());\r\n\r\n        this.btnAddChow.addEventListener('click', () => {\r\n            this.onNewSetClicked(tiles => {\r\n                if(tiles.length !== 3) {\r\n                    return null;\r\n                }\r\n                return new Chow(this.getHandRevealedValue(), ...tiles)\r\n            })\r\n        });\r\n\r\n        this.btnAddPung.addEventListener('click', () => {\r\n            this.onNewSetClicked(tiles => {\r\n                if(tiles.length !== 1) {\r\n                    return null\r\n                }\r\n                return new Pung(this.getHandRevealedValue(), tiles[0])\r\n            })\r\n        });\r\n\r\n        this.btnAddKong.addEventListener('click', () => {\r\n            this.onNewSetClicked(tiles => {\r\n                if(tiles.length !== 1) {\r\n                    return null\r\n                }\r\n                return new Kong(this.getHandRevealedValue(), tiles[0])\r\n            })\r\n        });\r\n\r\n        this.btnAddPair.addEventListener('click', () => {\r\n            this.onNewSetClicked(tiles => {\r\n                if(tiles.length !== 1) {\r\n                    return null\r\n                }\r\n                return new Pair(tiles[0])\r\n            })\r\n        });\r\n\r\n        this.btnAddTiles.addEventListener('click', () => {\r\n            this.onNewSetClicked(tiles => {\r\n                if(tiles.length < 1) {\r\n                    return null\r\n                }\r\n                return new FreeTiles(tiles)\r\n            })\r\n        });\r\n\r\n        this.btnFinishHand.addEventListener('click', () => {\r\n            let tilesets = this.addedSets.map(s => s.tileset);\r\n            this.onEditFinish.emit({\r\n                round: this.currentEdit.round,\r\n                player: this.currentEdit.player,\r\n                tilesets: tilesets,\r\n                isWinner: this.isWinnerInput.checked,\r\n                lastTileFromWall: this.lastTileFromWallInput.checked,\r\n                lastAvailableTile: this.lastAvailableTileInput.checked,\r\n                lastTileSpecial: this.lastTileSpecialInput.checked,\r\n            });\r\n        });\r\n    }\r\n\r\n    initUI() {\r\n        [Suits.BAMBOO, Suits.CIRCLE, Suits.CHARACTER, Suits.WIND, Suits.DRAGON, Suits.BONUS].forEach(suitType => {\r\n            let group = this.renderTileGroup(TileGroups[suitType]);\r\n\r\n            this.suitGroups.appendChild(group);\r\n        })\r\n    }\r\n\r\n    showHand(round, player) {\r\n        this.addedSets = [];\r\n\r\n        this.refreshHandContent();\r\n\r\n        let hand = round.getHand(player).hand;\r\n\r\n        if(hand) {\r\n            hand.sets.forEach(s => this.renderNewTileset(s));\r\n        }\r\n\r\n        this.roundNumberSlot.textContent = round.roundNumber;\r\n        this.playerNameSlot.textContent = player.name;\r\n\r\n        this.currentEdit = {\r\n            player: player,\r\n            round: round,\r\n        }\r\n    }\r\n\r\n    renderTileGroup(tiles) {\r\n        let result = document.createElement('ul');\r\n\r\n        tiles.forEach(tile => {\r\n            let tileView = new HandCreatorTileView(tile);\r\n            this.allTiles.push(tileView);\r\n            result.appendChild(tileView.view);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    onNewSetClicked(callback) {\r\n        let tiles = this.allTiles.filter(t => t.selected).map(t => t.tile);\r\n\r\n        let newSet = callback(tiles);\r\n\r\n        if(newSet !== null) {\r\n            this.renderNewTileset(newSet);\r\n        }\r\n\r\n        this.allTiles.forEach(t => t.resetSelected());\r\n    }\r\n\r\n    renderNewTileset(tileset) {\r\n        let view = this.renderNewTiles(tileset, tileset.tiles, tileset.isRevealed);\r\n\r\n        view.onRemove.addListener(() => {\r\n            this.addedSets.splice(this.addedSets.indexOf(view), 1);\r\n            this.refreshHandContent();\r\n        });\r\n\r\n\r\n        this.addedSets.push(view);\r\n    }\r\n\r\n    renderNewTiles(tileset, tiles, revealed) {\r\n        let view = new HandAddedTilesView(tileset, tiles, revealed || false);\r\n\r\n        this.handContents.appendChild(view.view);\r\n\r\n        return view;\r\n    }\r\n\r\n    refreshHandContent() {\r\n        while(this.handContents.firstChild) {\r\n            this.handContents.removeChild(this.handContents.firstChild);\r\n        }\r\n\r\n        this.addedSets.forEach(setView => {\r\n            this.handContents.appendChild(setView.view);\r\n        })\r\n    }\r\n\r\n    getHandRevealedValue() {\r\n        return !!this.handRevealedInput.value;\r\n    }\r\n}\r\n\r\nfunction renderTile(tile) {\r\n    let img = document.createElement('img');\r\n    img.classList.add('tile');\r\n    img.src = 'tiles/' + tile.toTypeString() + '.png';\r\n    return img;\r\n}\r\n\r\nclass HandCreatorTileView {\r\n    constructor(tile) {\r\n        this.tile = tile;\r\n        this.selected = false;\r\n        this.view = document.createElement('li');\r\n        this.view.appendChild(renderTile(tile));\r\n\r\n        this.view.addEventListener('click', () => {\r\n            this.selected = !this.selected;\r\n\r\n            this.view.classList.toggle('selected', this.selected);\r\n        })\r\n    }\r\n\r\n    resetSelected() {\r\n        this.selected = false;\r\n        this.view.classList.remove('selected');\r\n    }\r\n}\r\n\r\nclass HandAddedTilesView {\r\n    constructor(tileset, tiles, revealed) {\r\n        this.tiles = tiles;\r\n        this.tileset = tileset;\r\n\r\n        this.onRemove = new EventEmitter();\r\n        this.view = document.createElement('ul');\r\n\r\n        if(revealed) {\r\n            this.view.classList.add('revealedSet');\r\n        }\r\n\r\n        this.tiles.forEach(tile => {\r\n            let row = this.view.appendChild(document.createElement('li'));\r\n            row.appendChild(renderTile(tile));\r\n        });\r\n\r\n        let delButton = this.view.appendChild(document.createElement('li'));\r\n        delButton.classList.add('actionDelete');\r\n\r\n        delButton.appendChild(document.createTextNode('X'));\r\n        delButton.addEventListener('click', () => {\r\n            this.onRemove.emit();\r\n        })\r\n    }\r\n}\r\n\r\nexport {HandCreatorView}","import {EventEmitter} from \"../utils\";\r\nimport {domLoader} from \"./templates\";\r\nimport {dependencies} from \"needlepoint\";\r\nimport {GamePanel} from \"./gamePanel\";\r\nimport {Player} from \"../game\";\r\n\r\n\r\n@dependencies(domLoader('newGameForm'))\r\nexport class NewGameFormView extends GamePanel {\r\n\r\n    /**\r\n     * @param {DomTemplate} template\r\n     */\r\n    constructor(template) {\r\n        super(template.getRoot());\r\n\r\n        this.newGameCreateEvent = new EventEmitter();\r\n        this.cancelEvent = new EventEmitter();\r\n\r\n        this.form = this.root.querySelector('form');\r\n        this.inputs = Array.from(this.form.querySelectorAll('input'));\r\n\r\n        this.form.addEventListener('submit', e => {\r\n            e.preventDefault();\r\n            this.newGameCreateEvent.emit(this._getPlayers());\r\n        });\r\n\r\n        this.form.elements.cancel.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            this.cancelEvent.emit();\r\n        });\r\n    }\r\n\r\n    show() {\r\n        super.show();\r\n\r\n        this.inputs.forEach(input => input.value = '');\r\n    }\r\n\r\n    _getPlayers() {\r\n        return [\r\n            new Player(0, this.form.elements.player1Name.value),\r\n            new Player(1, this.form.elements.player2Name.value),\r\n            new Player(2, this.form.elements.player3Name.value),\r\n            new Player(3, this.form.elements.player4Name.value),\r\n        ]\r\n    }\r\n}","import {dependencies, singleton, container} from 'needlepoint';\r\n\r\nexport function domLoader(name) {\r\n    return function() {\r\n        let tmpl = container.resolve(TemplateContainer);\r\n        return new DomTemplate(tmpl.create(name));\r\n    }\r\n}\r\n\r\n@singleton\r\nexport class TemplateContainer {\r\n    constructor() {\r\n        this._templates = {};\r\n    }\r\n\r\n    create(name) {\r\n        let tmpl = this._templates[name];\r\n        return document.importNode(tmpl.content, true).firstElementChild;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} domTree\r\n     */\r\n    discover(domTree) {\r\n        Array.from(domTree.querySelectorAll('template')).forEach(tmplNode => {\r\n            this._templates[tmplNode.dataset.name] = tmplNode;\r\n        });\r\n    }\r\n\r\n    getTemplateNames() {\r\n        return Object.keys(this._templates);\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {Object} TemplateSlot\r\n * @property {HTMLElement} node\r\n * @property {String} name\r\n */\r\n\r\n\r\nexport class DomTemplate {\r\n    /**\r\n     *\r\n     * @param {HTMLElement} template\r\n     */\r\n    constructor(template) {\r\n        this.template = template;\r\n\r\n        /**\r\n         * @type {Array<TemplateSlot>}\r\n         */\r\n        this._slots = this._findSlots(template);\r\n    }\r\n\r\n    _findSlots(element) {\r\n        return Array.from(element.querySelectorAll('[data-slot]')).map(slotNode => {\r\n            return {\r\n                node: slotNode,\r\n                name: slotNode.dataset.slot\r\n            }\r\n        })\r\n    }\r\n\r\n    fillSlots(slotValues) {\r\n        this._slots.forEach(slot => {\r\n            if(slot.name in slotValues) {\r\n                slot.node.textContent = slotValues[slot.name];\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @return {HTMLElement}\r\n     */\r\n    getRoot() {\r\n        return this.template;\r\n    }\r\n}","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @package needlepoint\n * @copyright 2015 Andrew Munsell <andrew@wizardapps.net>\n */\n\n// Currently initialized instances for singletons\nvar dependencies = new Map();\nvar singletons = new Map();\n\nvar Container = (function () {\n    function Container() {\n        _classCallCheck(this, Container);\n    }\n\n    _createClass(Container, null, [{\n        key: 'resolve',\n\n        /**\n         * Resolve a single class to an instance, injecting dependencies as needed\n         * @param  {class|string} clazz\n         * @return {object}       Instance of the class\n         */\n        value: function resolve(clazz) {\n            clazz = Container.normalizeClass(clazz);\n\n            // If the class being injected is a singleton, handle it separately\n            // since instances of it are cached.\n            if (singletons.has(clazz)) {\n                return Container.resolveSingleton(clazz);\n            } else {\n                return Container.resolveSingleInstance(clazz);\n            }\n        }\n\n        /**\n         * Resolve the specified classes, injecting dependencies as needed\n         * @param  {class|string} ...classes\n         * @return {...object}\n         */\n\n    }, {\n        key: 'resolveAll',\n        value: function resolveAll() {\n            for (var _len = arguments.length, classes = Array(_len), _key = 0; _key < _len; _key++) {\n                classes[_key] = arguments[_key];\n            }\n\n            return classes.map(Container.resolve);\n        }\n\n        /**\n         * Resolve a class into a singleton instance. This single instance will be\n         * used across the entire application.\n         * @param  {class|string} clazz\n         * @return {object}       Resolved instance of the class as a singleton\n         */\n\n    }, {\n        key: 'resolveSingleton',\n        value: function resolveSingleton(clazz) {\n            if (singletons.get(clazz) === null) {\n                singletons.set(clazz, Container.resolveSingleInstance(clazz));\n            }\n\n            return singletons.get(clazz);\n        }\n\n        /**\n         * Resolve a class into an instance with all of its dependencies injected.\n         * @param  {class|string} clazz\n         * @return {object}       Resolved instance of the class\n         */\n\n    }, {\n        key: 'resolveSingleInstance',\n        value: function resolveSingleInstance(clazz) {\n            // Check and see if there are any dependencies that need to be injected\n            var deps = Container.resolveAll.apply(Container, _toConsumableArray(dependencies.get(clazz) || []));\n\n            // Apply the dependencies and create a new instance of the class\n            return new (Function.prototype.bind.apply(clazz, [null].concat(_toConsumableArray(deps))))();\n        }\n\n        /**\n         * Resolve a dependency into its class.\n         * @param  {class|function|string} clazz\n         * @return {class}\n         */\n\n    }, {\n        key: 'normalizeClass',\n        value: function normalizeClass(clazz) {\n            if (typeof clazz == 'string') {\n                // TODO: Actually resolve the class from the string name that\n                // was provided to us.\n            } else if (typeof clazz == 'function') {\n                    return clazz;\n                } else {\n                    throw new Error('Unable to resolve the dependency name to the class.');\n                }\n        }\n\n        /**\n         * Register an instance as a singleton for the specified class\n         * @param  {class|string} clazz\n         * @param  {object} instance\n         */\n\n    }, {\n        key: 'registerInstance',\n        value: function registerInstance(clazz, instance) {\n            if ((typeof instance === 'undefined' ? 'undefined' : _typeof(instance)) != 'object' && typeof instance != 'function') {\n                throw new Error('The argument passed was an invalid type.');\n            }\n\n            clazz = Container.normalizeClass(clazz);\n\n            singletons.set(clazz, instance);\n        }\n\n        /**\n         * Register the list of dependencies required for the specified class.\n         * @param  {class} clazz        Class to register dependencies for\n         * @param  {array} dependencies Array of dependencies for the class\n         */\n\n    }, {\n        key: 'registerDependencies',\n        value: function registerDependencies(clazz, deps) {\n            dependencies.set(clazz, deps);\n        }\n\n        /**\n         * Register the specified class as a singleton, meaning only a single\n         * instance of it will be created for the entire application.\n         * @param  {class} clazz\n         */\n\n    }, {\n        key: 'registerAsSingleton',\n        value: function registerAsSingleton(clazz) {\n            if (!singletons.has(clazz)) {\n                singletons.set(clazz, null);\n            }\n        }\n    }]);\n\n    return Container;\n})();\n\nexports.default = Container;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = dependencies;\n\nvar _container = require('./container');\n\nvar _container2 = _interopRequireDefault(_container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction dependencies() {\n    for (var _len = arguments.length, deps = Array(_len), _key = 0; _key < _len; _key++) {\n        deps[_key] = arguments[_key];\n    }\n\n    return function decorator(Clazz) {\n        _container2.default.registerDependencies(Clazz, deps);\n    };\n} /**\n   * @package needlepoint\n   * @copyright 2015 Andrew Munsell <andrew@wizardapps.net>\n   */","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _container = require('./container');\n\nObject.defineProperty(exports, 'container', {\n  enumerable: true,\n  get: function get() {\n    return _container.default;\n  }\n});\n\nvar _singleton = require('./singleton');\n\nObject.defineProperty(exports, 'singleton', {\n  enumerable: true,\n  get: function get() {\n    return _singleton.default;\n  }\n});\n\nvar _dependencies = require('./dependencies');\n\nObject.defineProperty(exports, 'dependencies', {\n  enumerable: true,\n  get: function get() {\n    return _dependencies.default;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = singleton;\n\nvar _container = require('./container');\n\nvar _container2 = _interopRequireDefault(_container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction singleton(Clazz) {\n  _container2.default.registerAsSingleton(Clazz);\n} /**\n   * @package needlepoint\n   * @copyright 2015 Andrew Munsell <andrew@wizardapps.net>\n   */"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}